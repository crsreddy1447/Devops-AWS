DOCKER Class
*** If we fell application is important than OS we will go for DOCKER

Installations:
1. Visual Studio code
2. Git for windows
3. DOCKER
  ---> windows 10 (other than home edition)
      DOCKER for windows
	  
 ----> Windows 7
        docker tool box
 ----> Linux
       docker for linux 
	** This is not the right way to install in production. Because it install latest one   
	   $ curl -fsSL get.docker.com -o get-docker.sh  ---> for installing docker(docker install script)
	   $ sudo sh ./get-docker.sh
	   
**** This commands are used to avoid using root user and Sudo user
	   
	   $sudo addgroup --system docker
       $sudo adduser $USER docker
       $newgrp docker
	   
	         (OR)
	   $sudo usermod -a -G docker $USER
       $sudo reboot	 
	   
	   
Good process to install any software is 
chocolatey.org
  1.Installing Chocolatey
      Copy the step in cmd prompt as admin
	  
  2. choco install visualstudiocode -y

  3. choco install  git -y
  
Docker working process
1."Client" who gives commands
2. "Docker Daemon/service" which provides services
3. Local repo
4. Registry (Mostly hub.docker.com) or remote repo

  >In this process if we give a pull command.
  >Daemon look into local repo. if not found
  >It connect to registry and pull from remote repo.
  >After pulling this image will be stored locally
  
* Docker image means it all about the container.
* Docker image can have multiple containers. But they are differentiated by TAGS.
* We can run as many no of container as possible till storage is available.

COMMANDS: 
docker ps ---> Shows all the running images
docker ps -a ---> Shows all containers both running and stopped
docker ps -a -q  --->  Show containers id
docker rm -f  ---> remove running container forcely
df -h  ----> mounting
docker run -it jenkins /bin/sh  ---> it means interactively. it is used to get inside the container.
docker rm -f $(docker ps -a -q)  ----> Delete the containers by showing their id


Docker works on two things
1. Name Space ---> it is a linux concept which create an isolated user space
2. Control Groups (c groups) ---> control the process

*Here docker is secure if the host os *is secured. As it depends on Host OS

1. HOW TO CREATE A CONTAINER
process
 >From where we have to run the container (OS)(FROM)
 >Who is maintaining all these (Person)  optional step
 >What to be installed on the container  (ex: git)
 >Step for installing it. (RUN)
 >How to communicate. We will use port forwarding (Expose)
 
 If we follow only above steps containers will be killed immediately. To over come we use Below:
 
 >CMD : Can be changed. Latest one will be executed
 >ENTRY POINT: Cant be changed 
 Eample:
 ENTRY POINT ["ping"]
 CMD ["google.com"] google can be changed to yahoo.com while scripting.
 
 All these process is stored in Dockerfile.
 Dockerfile format
    FROM ubuntu
	MAINTAINER raja
	RUN apt-get update && apt-get install git -yahoo
	EXPOSE 80
	
Dockerfile has two states
  1. Docker Build
    >FROM
	>RUN
  2. DOCKER Run
    >ENTRY POINT
    >CMD.

COMMANDS
$ docker run -d -name abc -p 80:80 myapache.1.0
	-d ----> detach mode. Process is run in the back ground. used in Real production
	-p ----> port forwarding method to communicate container with that application
	1.0 ---> Version for image called tags. Two images can't be having same name.

	
How to create an image in a Professional Way
* Basically we will not start from Scratch. Which is waste of time. 
* We take a base file that is declared officially.
* We will not use MAINTAINER in profession. Instead of that we use LABEL
EX: LABEL "Organisation" = "ABCDEF"
    LABEL "owner" = "Raja"
	
ADD Vs COPY	Commands in Dockerfile
ADD:
Synatx:  ADD <source/url> <destination>
EX: ADD https://jdk 8.0..... /usr/local/tomcat/webapps/java.war
-->ADD can copy from local to internet and also from internet to local

COPY:
Syntax: COPY <source file> <destination>
EX: COPY jenkins.war /usr/local/tomcat/webapps/jenkins.war
---> COPY can only copy from local to internet
---> COPY dont accept url path.

WORKDIR: It helps to set a home directory. It is used in Dockerfile 
Ex: WORKDIR /usr/local/tomcat/webapps/java
****We commit docker file in Dev code

How to send created images to docker hub
$docker login
  enter user name and password
  
Now build a image that starts with your username locally.
Ex: crsreddy1447/mygit:1.0

Command 
$docker built -t crsreddy1447/mygit:1.0
Now Push the docker image to Remote Repo
$docker push crsreddy1447/mygit:1.0

  

	
 
 
 

	   
	   